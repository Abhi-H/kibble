openapi: 3.0.0
info:
  version: 1.0.0
  description: This is the API specifications for interacting with the Kibble UI.
  title: Apache Kibble API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /api/org/trends:
    get:
      summary: Shows a quick trend summary of the past 6 months for your org
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trend'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/account:
    put:
      summary: Create a new account
      requestBody:
        description: User credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccount'
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionCompleted'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      security:
        - cookieAuth: []
      summary: Delete an account
      requestBody:
        description: User ID
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserName'
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionCompleted'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/session:
    get:
      security:
        - cookieAuth: []
      summary: Display your login details
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserData'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Log in
      requestBody:
        description: User credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: Login successful
          headers:
            Set-Cookie:
                schema:
                    type: string
                    example: 77488a26-23c2-4e29-94a1-6a0738f6a3ff
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionCompleted'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Log out (remove session)
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserData'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/code/sloc:
    get:
      summary: Shows a breakdown of lines of code for one or more sources
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sloc'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Shows a breakdown of lines of code for one or more sources
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sloc'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/code/trends:
    get:
      summary: Shows trend data for a set of repos over a given period of time
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trend'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Shows trend data for a set of repos over a given period of time
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trend'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/code/pony:
    get:
      summary: Shows pony factor data for a set of repos over a given period of time
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Factor'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Shows pony factor data for a set of repos over a given period of time
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Factor'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/issue/trends:
    get:
      summary: Shows trend data for a set of issue trackers over a given period of time
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trend'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Shows trend data for a set of issue trackers over a given period of time
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trend'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/issue/issues:
    get:
      summary: Shows timeseries of issues opened/closed over time
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Shows timeseries of issues opened/closed over time
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/code/pony-timeseries:
    get:
      summary: Shows timeseries of Pony Factor over time
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Shows timeseries of Pony Factor over time
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/issue/actors:
    get:
      summary: Shows timeseries of no. of people opening/closing issues over time
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Shows timeseries of no. of people opening/closing issues over time
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/issue/age:
    get:
      summary: Shows timeseries of no. of open tickets by age
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Shows timeseries of no. of open tickets by age
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/code/committers:
    get:
      summary: Shows the top N of committers
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitterList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Shows trend data for a set of repos over a given period of time
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitterList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/issue/closers:
    get:
      summary: Shows the top N of issue closers
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitterList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Shows the top N of issue closers
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitterList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/issue/openers:
    get:
      summary: Shows the top N of issue openers
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitterList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Shows the top N of issue openers
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitterList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /api/issue/top:
    get:
      summary: Shows the top N issues by interactions
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Shows the top N issues by interactions
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /api/code/commits:
    get:
      summary: Show commits as a timeseries
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Show commits as a timeseries
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/code/changes:
    get:
      summary: Show insertions/deletions as a timeseries
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Show insertions/deletions as a timeseries
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/code/evolution:
    get:
      summary: Show code evolution as a timeseries
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Show code evolution as a timeseries
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/code/top-commits:
    get:
      summary: Shows top 25 repos by commit volume
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Shows top 25 repos by commit volume
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/code/top-sloc:
    get:
      summary: Shows top 25 repos by lines of code
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Shows top 25 repos by lines of code
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/sources:
    get:
      summary: Fetches a list of all sources for this organisation
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Fetches a list of all sources for this organisation
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Edit an existing source
      security:
        - cookieAuth: []
      requestBody:
        description: New source data to set
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionCompleted'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Add a new source
      security:
        - cookieAuth: []
      requestBody:
        description: New source data to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionCompleted'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/views:
    get:
      summary: Fetches a list of all views (filters) for this user
      security:
        - cookieAuth: []
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Fetches a list of all views (filters) for this user
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultWidgetArgs'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Edit an existing source
      security:
        - cookieAuth: []
      requestBody:
        description: New source data to set
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/View'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionCompleted'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Add a new source
      security:
        - cookieAuth: []
      requestBody:
        description: New source data to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/View'
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionCompleted'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/api/widgets/{pageid}':
    get:
      summary: Shows the widget layout for a specific page
      security:
        - cookieAuth: []
      parameters:
        - name: pageid
          in: path
          description: Page ID to fetch design for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetDesign'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: kibble_session
  schemas:
    Error:
      required:
        - code
        - reason
      properties:
        code:
          description: "HTTP Error Code"
          type: integer
          format: int16
          example: 403
        reason:
          description: "Human readable error message"
          type: string
          example: "You need to be logged in to view this endpoint!"
    ActionCompleted:
      required:
        - message
      properties:
        message:
          type: string
          description: "Acknowledgement message"
          example: "Action completed"
    Source:
      required:
        - sourceID
        - type
        - sourceURL
      properties:
        sourceID:
          description: "The SourceID of this source"
          type: string
        type:
          description: "The type of source (git, svn, bugzilla, mail, etc)"
          type: string
        sourceURL:
          description: "The origin URL of this source."
          type: string
        organisation:
          description: "The organisation this source belongs to"
          type: string
    SourceList:
      required:
        - okay
        - organisation
        - sources
      properties:
        okay:
          type: boolean
        organisation:
          type: string
          description: "The organisation these sources belong to"
        sources:
          description: "The sources in this organisation"
          type: array
          items:
            $ref: '#/components/schemas/Source'
    View:
      required:
        - id
        - name
        - organisation
      properties:
        id:
          type: string
          description: "The ID of this view. to be used with other API queries"
          example: "abcdef67126734271"
        name:
          type: string
          description: "The name of this view"
          example: "Big Data Projects"
        organisation:
          type: string
          description: "The organisation this view belongs to"
          example: "apache"
        sources:
          description: "The sources within this view"
          type: array
          items:
            $ref: '#/components/schemas/Source'
    ViewList:
      required:
        - okay
        - organisation
        - views
      properties:
        okay:
          type: boolean
        organisation:
          description: "The organisation these views belong to"
          type: string
          example: "apache"
        sources:
          description: "A list of sources within this org"
          type: array
          items:
            $ref: '#/components/schemas/Source'
        views:
          type: array
          description: "The view available"
          items:
            $ref: '#/components/schemas/View'
    UserCredentials:
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: guest@kibble.live
          description: "Username (email)"
        password:
          type: string
          example: "kibbledemo"
          description: "User password"
    UserData:
      properties:
        username:
          type: string
          description: "The username (email) of the user"
          example: "guest@kibble.live"
        displayName:
          type: string
          description: "The display-name of the user"
          example: "Kibble Guest"
        defaultOrganisation:
          type: string
          description: "The default organisation. This is where Kibble will collect data from."
          example: "apache"
        organisations:
          description: "A list of organisations you belong to"
          example: ["apache", "demo"]
          type: array
          items:
            type: string
        userLevel:
          description: "User level (user/owner/admin)"
          example: "user"
          type: string
    defaultWidgetArgs:
      properties:
        view:
          type: string
          description: "ID Of optional view to use"
          example: "abcdef12345678"
        quick:
          type: boolean
          description: "Turns on quick data for some endpoints, returning only sparse data (thus less traffic)"
          example: false
        page:
          type: string
        source:
          type: string
          description: "If specified, only compile data on this specific sourceID"
          example: "abcdef12345678"
        from:
          type: integer
          description: "If specified, compile data from this timestamp onwards"
          example: 1400000000
        to:
          type: integer
          description: "If specified, only compile data up until here"
          example: 1503483273
        author:
          type: boolean
          description: "Turns on author view for code results, as opposed to the default committer view"
        unique:
          type: boolean
          description: "Only compile data from unique commits, ignore duplicates"
        interval:
          description: "If fetching histograms, this specifies the interval to pack figures into. Can be day, week, month, quarter or year"
          type: string
          example: "month"
        types:
          description: "If set, only return data from sources matching these types"
          type: array
          example: ['jira', 'bugzilla']
        span:
          description: "For factor charts, denotes the number of years to calculate a factor from"
          type: integer
          example: 2
    Sloc:
      properties:
        count:
          type: object
    Trend:
      properties:
        okay:
          type: boolean
        trends:
          type: object
    CommitterList:
      properties:
        okay:
          type: boolean
        people:
          type: object
    Timeseries:
      properties:
        okay:
          type: boolean
        timeseries:
          type: array
          items:
            $ref: "#/components/schemas/TimeseriesObject"
        interval:
          type: string
    TimeseriesObject:
      required:
        - date
      properties:
        date:
          type: integer
          description: "Seconds since UNIX epoch"
          example: 1508273
        $item:
          type: integer
          description: "A timeseries object"
          example: 50
        $otheritem:
          type: integer
          description: "A timeseries object"
          example: 26
    WidgetDesign:
      properties:
        title:
          type: string
        rows:
          type: array
          items:
            $ref: '#/components/schemas/WidgetRow'
    TopList:
      properties:
        title:
          type: string
        top:
          type: array
          items:
            type: object
    WidgetRow:
      properties:
        name:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/WidgetApp'
    WidgetApp:
      required:
        - type
        - name
        - blocks
      properties:
        type:
          type: string
          description: The type of widget
          example: "My Widget"
        name:
          type: string
          description: The title of the widget app
          example: "Widget Title"
        blocks:
          type: integer
          description: Size (width) in UI blocks of the app
          example: 4
        source:
          type: string
          description: The API endpoint to get data from
          example: code-evolution
        datatype:
          type: string
          description: The top category of this data
          example: repo
        target:
          type: string
        representation:
          type: string
          description: The visual representation style of this widget
          example: donut
        text:
          type: string
          description: Text to insert into the widget (if paragraph type widget)
    Factor:
      required:
        - okay
        - factors
      properties:
        okay:
          type: boolean
        factors:
          type: array
          items:
            type: object
    UserAccount:
      required:
        - email
        - password
        - displayname
      properties:
        email:
          type: string
          example: "guest@kibble.live"
          description: "Desired username (email address)"
        password:
          type: string
          example: "kibbledemo"
          description: "Desired password for the account"
        displayname:
          type: string
          example: "Kibble Guest"
          description: "A display name (e.g. full name) for the account"
    UserName:
      required:
        - username
      properties:
        username:
          type: string
          example: "kibbleguest"
